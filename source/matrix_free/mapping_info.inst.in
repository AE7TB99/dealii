// ---------------------------------------------------------------------
//
// Copyright (C) 2018 by the deal.II authors
//
// This file is part of the deal.II library.
//
// The deal.II library is free software; you can use it, redistribute
// it, and/or modify it under the terms of the GNU Lesser General
// Public License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
// The full text of the license can be found in the file LICENSE.md at
// the top level directory of deal.II.
//
// ---------------------------------------------------------------------


for (deal_II_dimension : DIMENSIONS)
  {
    template struct internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, double, VectorizedArray<double, 1>>;
    template struct internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, float, VectorizedArray<float, 1>>;

    template struct internal::MatrixFreeFunctions::MappingInfoStorage<
      deal_II_dimension,
      deal_II_dimension,
      double,
      VectorizedArray<double, 1>>;
    template struct internal::MatrixFreeFunctions::MappingInfoStorage<
      deal_II_dimension,
      deal_II_dimension,
      float,
      VectorizedArray<float, 1>>;
#if deal_II_dimension > 1
    template struct internal::MatrixFreeFunctions::MappingInfoStorage<
      deal_II_dimension - 1,
      deal_II_dimension,
      double,
      VectorizedArray<double, 1>>;
    template struct internal::MatrixFreeFunctions::MappingInfoStorage<
      deal_II_dimension - 1,
      deal_II_dimension,
      float,
      VectorizedArray<float, 1>>;
#endif

    template void internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, double, VectorizedArray<double, 1>>::
        print_memory_consumption<std::ostream>(std::ostream &, const TaskInfo &)
          const;
    template void internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, double, VectorizedArray<double, 1>>::
        print_memory_consumption<ConditionalOStream>(ConditionalOStream &,
                                                     const TaskInfo &) const;

    template void internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, float, VectorizedArray<float, 1>>::
        print_memory_consumption<std::ostream>(std::ostream &, const TaskInfo &)
          const;
    template void internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, float, VectorizedArray<float, 1>>::
        print_memory_consumption<ConditionalOStream>(ConditionalOStream &,
                                                     const TaskInfo &) const;



#if (DEAL_II_COMPILER_VECTORIZATION_LEVEL >= 1 && defined(__SSE2__)) || \
  (DEAL_II_COMPILER_VECTORIZATION_LEVEL >= 1 && defined(__ALTIVEC__))
    template struct internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, double, VectorizedArray<double, 2>>;
    template struct internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, float, VectorizedArray<float, 4>>;

    template struct internal::MatrixFreeFunctions::MappingInfoStorage<
      deal_II_dimension,
      deal_II_dimension,
      double,
      VectorizedArray<double, 2>>;
    template struct internal::MatrixFreeFunctions::MappingInfoStorage<
      deal_II_dimension,
      deal_II_dimension,
      float,
      VectorizedArray<float, 4>>;
#  if deal_II_dimension > 1
    template struct internal::MatrixFreeFunctions::MappingInfoStorage<
      deal_II_dimension - 1,
      deal_II_dimension,
      double,
      VectorizedArray<double, 2>>;
    template struct internal::MatrixFreeFunctions::MappingInfoStorage<
      deal_II_dimension - 1,
      deal_II_dimension,
      float,
      VectorizedArray<float, 4>>;
#  endif

    template void internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, double, VectorizedArray<double, 2>>::
        print_memory_consumption<std::ostream>(std::ostream &, const TaskInfo &)
          const;
    template void internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, double, VectorizedArray<double, 2>>::
        print_memory_consumption<ConditionalOStream>(ConditionalOStream &,
                                                     const TaskInfo &) const;

    template void internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, float, VectorizedArray<float, 4>>::
        print_memory_consumption<std::ostream>(std::ostream &, const TaskInfo &)
          const;
    template void internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, float, VectorizedArray<float, 4>>::
        print_memory_consumption<ConditionalOStream>(ConditionalOStream &,
                                                     const TaskInfo &) const;
#endif



#if DEAL_II_COMPILER_VECTORIZATION_LEVEL >= 2 && defined(__AVX__)
    template struct internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, double, VectorizedArray<double, 4>>;
    template struct internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, float, VectorizedArray<float, 8>>;

    template struct internal::MatrixFreeFunctions::MappingInfoStorage<
      deal_II_dimension,
      deal_II_dimension,
      double,
      VectorizedArray<double, 4>>;
    template struct internal::MatrixFreeFunctions::MappingInfoStorage<
      deal_II_dimension,
      deal_II_dimension,
      float,
      VectorizedArray<float, 8>>;
#  if deal_II_dimension > 1
    template struct internal::MatrixFreeFunctions::MappingInfoStorage<
      deal_II_dimension - 1,
      deal_II_dimension,
      double,
      VectorizedArray<double, 4>>;
    template struct internal::MatrixFreeFunctions::MappingInfoStorage<
      deal_II_dimension - 1,
      deal_II_dimension,
      float,
      VectorizedArray<float, 8>>;
#  endif

    template void internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, double, VectorizedArray<double, 4>>::
        print_memory_consumption<std::ostream>(std::ostream &, const TaskInfo &)
          const;
    template void internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, double, VectorizedArray<double, 4>>::
        print_memory_consumption<ConditionalOStream>(ConditionalOStream &,
                                                     const TaskInfo &) const;

    template void internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, float, VectorizedArray<float, 8>>::
        print_memory_consumption<std::ostream>(std::ostream &, const TaskInfo &)
          const;
    template void internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, float, VectorizedArray<float, 8>>::
        print_memory_consumption<ConditionalOStream>(ConditionalOStream &,
                                                     const TaskInfo &) const;
#endif



#if DEAL_II_COMPILER_VECTORIZATION_LEVEL >= 3 && defined(__AVX512F__)
    template struct internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, double, VectorizedArray<double, 8>>;
    template struct internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, float, VectorizedArray<float, 16>>;

    template struct internal::MatrixFreeFunctions::MappingInfoStorage<
      deal_II_dimension,
      deal_II_dimension,
      double,
      VectorizedArray<double, 8>>;
    template struct internal::MatrixFreeFunctions::MappingInfoStorage<
      deal_II_dimension,
      deal_II_dimension,
      float,
      VectorizedArray<float, 16>>;
#  if deal_II_dimension > 1
    template struct internal::MatrixFreeFunctions::MappingInfoStorage<
      deal_II_dimension - 1,
      deal_II_dimension,
      double,
      VectorizedArray<double, 8>>;
    template struct internal::MatrixFreeFunctions::MappingInfoStorage<
      deal_II_dimension - 1,
      deal_II_dimension,
      float,
      VectorizedArray<float, 16>>;
#  endif

    template void internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, double, VectorizedArray<double, 8>>::
        print_memory_consumption<std::ostream>(std::ostream &, const TaskInfo &)
          const;
    template void internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, double, VectorizedArray<double, 8>>::
        print_memory_consumption<ConditionalOStream>(ConditionalOStream &,
                                                     const TaskInfo &) const;

    template void internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, float, VectorizedArray<float, 16>>::
        print_memory_consumption<std::ostream>(std::ostream &, const TaskInfo &)
          const;
    template void internal::MatrixFreeFunctions::
      MappingInfo<deal_II_dimension, float, VectorizedArray<float, 16>>::
        print_memory_consumption<ConditionalOStream>(ConditionalOStream &,
                                                     const TaskInfo &) const;
#endif
  }
