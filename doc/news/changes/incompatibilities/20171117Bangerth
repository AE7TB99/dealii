Changed: The many KellyErrorEstimator::estimate() overloads all have
an argument that represents the Neumann boundary values (if the
solution of the PDE satisfies Neumann boundary conditions on parts of
the boundary). They used to just be of type Function<dim>, but this
has now been changed to Function<dim,number> (or, more precisely,
FunctionMap<dim,number>, which stores a map to Function<dim,number>
objects) where @p number is the underlying data type of the input
vector. In other words, if you are using a regular Vector<double> (or
PETSc or Trilinos equivalents), then nothing has changed since @p
number is @p double, which is the default for the Function class. On
the other hand, if you are using a Vector<std::complex<double>>, for
example, then you need to pass a Function<dim,std::complex<double>> --
which of course makes sense because the Neumann boundary values of a
complex-valued solution should also be complex-valued.  
<br> 
(Wolfgang Bangerth, 2017/11/17)
